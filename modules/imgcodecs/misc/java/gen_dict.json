{
    "ManualFuncs" : {
        "Imgcodecs" : {
            "convenience" : {
                "j_code" : [
                    "    private static MatOfInt newMatOfInt(int[] ints) {",
                    "        return ints != null ? new MatOfInt(ints) : new MatOfInt();",
                    "    }",
                    "",
                    "    private static MatOfByte newMatOfByte(byte[] bytes) {",
                    "        return bytes != null ? new MatOfByte(bytes) : new MatOfByte();",
                    "    }",
                    "",
                    "    /** Saves an image to a specified file.",
                    "     *",
                    "     * Convenience method.",
                    "     *",
                    "     * @see #imwrite(String,Mat,MatOfInt)",
                    "     */",
                    "    public static boolean imwrite(String filename, Mat img, int[] params) {",
                    "        MatOfInt moi = newMatOfInt(params);",
                    "        boolean ret = imwrite(filename, img, moi);",
                    "        moi.release();",
                    "        return ret;",
                    "    }",
                    "",
                    "    /** Saves an image to a specified file.",
                    "     *",
                    "     * Convenience method.",
                    "     *",
                    "     * @see #imwrite(String,Mat,MatOfInt,Map)",
                    "     */",
                    "    public static boolean imwrite(String filename, Mat img, int[] iparams, Map<Integer,String> sparams) {",
                    "        MatOfInt moi = newMatOfInt(iparams);",
                    "        boolean ret = imwrite(filename, img, moi, sparams);",
                    "        moi.release();",
                    "        return ret;",
                    "    }",
                    "",
                    "    /** Encodes an image into a memory buffer.",
                    "     *",
                    "     * Convenience method.",
                    "     *",
                    "     * @see #imencode(String,Mat,MatOfByte,MatOfInt)",
                    "     */",
                    "    public static boolean imencode(String ext, Mat img, MatOfByte buf, int[] iparams) {",
                    "        MatOfInt moi = newMatOfInt(iparams);",
                    "        boolean ret = imencode(ext, img, buf, moi);",
                    "        moi.release();",
                    "        return ret;",
                    "    }",
                    "",
                    "    /** Encodes an image into a memory buffer.",
                    "     *",
                    "     * Convenience method.",
                    "     *",
                    "     * @see #imencode(String,Mat,MatOfByte,MatOfInt,Map)",
                    "     */",
                    "    public static boolean imencode(String ext, Mat img, MatOfByte buf, int[] iparams, Map<Integer,String> sparams) {",
                    "        MatOfInt moi = newMatOfInt(iparams);",
                    "        boolean ret = imencode(ext, img, buf, moi, sparams);",
                    "        moi.release();",
                    "        return ret;",
                    "    }",
                    "",
                    "    /** Encodes an image into a memory buffer.",
                    "     *",
                    "     * Convenience method.",
                    "     *",
                    "     * @see #imencode(String,Mat,MatOfByte,Map,Map)",
                    "     */",
                    "    public static byte[] imencode(String ext, Mat img, byte[] buf, Map<Integer, Integer> iparams, Map<Integer,String> sparams) {",
                    "        MatOfByte mob = newMatOfByte(buf);",
                    "        if(!imencode(ext, img, mob, iparams, sparams)) return null;",
                    "        byte[] ret = new byte[(int) mob.total()];",
                    "        mob.get(0, 0, ret);",
                    "        mob.release();",
                    "        return ret;",
                    "    }",
                    "",
                    "    /** Encodes an image into a memory buffer.",
                    "     *",
                    "     * Convenience method.",
                    "     *",
                    "     * @see #imencode(String,Mat,MatOfByte,MatOfInt,Map)",
                    "     */",
                    "    public static byte[] imencode(String ext, Mat img, byte[] buf, int[] iparams, Map<Integer,String> sparams) {",
                    "        MatOfByte mob = newMatOfByte(buf);",
                    "        if(!imencode(ext, img, mob, iparams, sparams)) return null;",
                    "        byte[] ret = new byte[(int) mob.total()];",
                    "        mob.get(0, 0, ret);",
                    "        mob.release();",
                    "        return ret;",
                    "    }",
                    "",
                    "    /** Encodes an image into a memory buffer.",
                    "     *",
                    "     * Convenience method.",
                    "     *",
                    "     * @see #imencode(String,Mat,MatOfByte,MatOfInt)",
                    "     */",
                    "    public static byte[] imencode(String ext, Mat img, byte[] buf, int[] iparams) {",
                    "        MatOfByte mob = newMatOfByte(buf);",
                    "        if(!imencode(ext, img, mob, iparams)) return null;",
                    "        byte[] ret = new byte[(int) mob.total()];",
                    "        mob.get(0, 0, ret);",
                    "        mob.release();",
                    "        return ret;",
                    "    }",
                    "",
                    "    /** Encodes an image into a memory buffer.",
                    "     *",
                    "     * Convenience method.",
                    "     *",
                    "     * @see #imencode(String,Mat,MatOfByte)",
                    "     */",
                    "    public static byte[] imencode(String ext, Mat img, byte[] buf) {",
                    "        MatOfByte mob = newMatOfByte(buf);",
                    "        if(!imencode(ext, img, mob)) return null;",
                    "        byte[] ret = new byte[(int) mob.total()];",
                    "        mob.get(0, 0, ret);",
                    "        mob.release();",
                    "        return ret;",
                    "    }"
                ],
                "jn_code" : [
                ],
                "cpp_code" : [
                ]
            }
        }
    }
}
